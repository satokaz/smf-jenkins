<?xml version="1.0" ?>
<!DOCTYPE service_bundle
  SYSTEM '/usr/share/lib/xml/dtd/service_bundle.dtd.1'>
<!--
    Manifest created by svcbundle (2015-Dec-08 22:20:55+0900)
-->
<service_bundle type="manifest" name="site/jenkins">
    <service version="1" type="service" name="site/jenkins">
        <!--
            The following dependency keeps us from starting until the
            multi-user milestone is reached.
        -->
        <dependency restart_on="none" type="service"
            name="multi_user_dependency" grouping="require_all">
            <service_fmri value="svc:/milestone/multi-user"/>
        </dependency>
        <exec_method timeout_seconds="60" type="method" name="start"
            exec="ksh -x /lib/svc/method/svc-jenkins %m">
		<method_context>
		    <method_credential group='nobody'
		        privileges='basic,net_privaddr' user='jenkins'/>
		    <method_environment>
		        <envvar name='JENKINS_HOME' value='/export/home/jenkins'/>
		    </method_environment>
		</method_context>
	</exec_method>


        <!--
            The exec attribute below can be changed to a command that SMF
            should execute to stop the service.  See smf_method(5) for more
            details.
        -->
        <exec_method timeout_seconds="60" type="method" name="stop"
            exec=":kill"/>
        <!--
            The exec attribute below can be changed to a command that SMF
            should execute when the service is refreshed.  Services are
            typically refreshed when their properties are changed in the
            SMF repository.  See smf_method(5) for more details.  It is
            common to retain the value of :true which means that SMF will
            take no action when the service is refreshed.  Alternatively,
            you may wish to provide a method to reread the SMF repository
            and act on any configuration changes.
        -->
        <exec_method timeout_seconds="60" type="method" name="refresh"
            exec=":true"/>

        <property_group name='options' type='application'>
		<propval name='http_port' type='count' value='8080' />
		<propval name='httpListenAddress' type='astring' value='0.0.0.0' />
		<propval name='prefix' type='astring' value='/jenkins' />
	</property_group>

        <property_group type="framework" name="startd">
            <propval type="astring" name="duration" value="child"/>
        </property_group>

        <instance enabled="true" name="default"/>
	<stability value='Evolving' />
        <template>
            <common_name>
                <loctext xml:lang="C">
                    <!--
                        Replace this comment with a short name for the
                        service.
                    -->
                </loctext>
            </common_name>
            <description>
                <loctext xml:lang="C">
                    <!--
                        Replace this comment with a brief description of
                        the service
                    -->
                </loctext>
            </description>
        </template>
    </service>
</service_bundle>
